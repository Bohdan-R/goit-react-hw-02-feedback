{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/Statistics/Statistics.js","components/Section/Section.js","App.js","index.js"],"names":["FeedbackOptions","options","onLeaveFeedback","className","map","feedbackName","type","name","onClick","Notification","message","defaultProps","propTepes","PropTypes","string","Statistics","good","neutral","bad","total","positivePercentage","Section","title","children","App","state","handleFeedbacksQuantity","e","currentTarget","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRA0BeA,EAtBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAChC,OACI,qBAAKC,UAAU,WAAf,SACKF,EAAQG,KAAI,SAAAC,GAAY,OACrB,wBAEIC,KAAK,SACLH,UAAU,gBACVI,KAAMF,EACNG,QAASN,EALb,SAMEG,GALOA,S,gBCNnBI,EAAe,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAAF,OACjB,4BAAIA,KAGRD,EAAaE,aAAe,CAC1BD,QAAS,qBAGXD,EAAaG,UAAY,CACvBF,QAASG,IAAUC,QAGNL,QCmBAM,EA9BI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAE7C,OACI,gCACI,2CAGCD,EAAQ,EACL,gCACI,uCAAUH,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,UAGN,cAAC,EAAD,CAAcV,QAAQ,0BChB9BW,G,MAAU,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,SAAT,OACZ,sBAAKpB,UAAU,UAAf,UACI,oBAAIA,UAAU,QAAd,SAAuBmB,IACtBC,OAITF,EAAQV,aAAe,CACnBW,MAAO,yBAQID,QCsCAG,E,4MAnDXC,MAAQ,CACJT,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGTQ,wBAA0B,SAAAC,GAAM,IACpBpB,EAASoB,EAAEC,cAAXrB,KAER,EAAKsB,UAAS,SAAAC,GAAS,sBAClBvB,EAAOuB,EAAUvB,GAAQ,O,EAIlCwB,mBAAqB,WAAO,IAAD,EACQ,EAAKN,MACpC,OAFuB,EACfT,KADe,EACTC,QADS,EACAC,K,EAI3Bc,gCAAkC,WAAO,IAC7BhB,EAAS,EAAKS,MAAdT,KAER,OAAOiB,KAAKC,MAAMlB,EAAO,EAAKe,qBAAuB,M,4CAGzD,WAAU,IAAD,EAC0BI,KAAKV,MAA5BT,EADH,EACGA,KAAMC,EADT,EACSA,QAASC,EADlB,EACkBA,IAEvB,OACI,mCACI,eAAC,EAAD,CAASI,MAAM,wBAAf,UAEI,cAAC,EAAD,CACIrB,QAASmC,OAAOC,KAAKF,KAAKV,OAC1BvB,gBAAiBiC,KAAKT,0BAG1B,cAAC,EAAD,CACIV,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOgB,KAAKJ,qBACZX,mBAAoBe,KAAKH,6C,GA3C/BM,a,MCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3fb7d748.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './FeedbackOptions.scss'\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n    return (\r\n        <div className=\"feedback\">\r\n            {options.map(feedbackName => (\r\n                <button\r\n                    key={feedbackName}\r\n                    type=\"button\"\r\n                    className=\"feedback__btn\"\r\n                    name={feedbackName}\r\n                    onClick={onLeaveFeedback}\r\n                >{feedbackName}\r\n                </button>\r\n            ))}\r\n        </div>\r\n    )\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n    options: PropTypes.array.isRequired,\r\n    onLeaveFeedback: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({message}) => (\r\n    <p>{message}</p>\r\n)\r\n\r\nNotification.defaultProps = {\r\n  message: \"No feedback given\",\r\n}\r\n\r\nNotification.propTepes = {\r\n  message: PropTypes.string,\r\n}\r\n\r\nexport default Notification;","import React from 'react';\r\nimport Notification from '../Notification';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n\r\n    return (\r\n        <div>\r\n            <p>Statistics</p>\r\n\r\n        \r\n            {total > 0 \r\n            ?   <div>\r\n                    <p>Good: {good}</p>\r\n                    <p>Neutral: {neutral}</p>\r\n                    <p>Bad: {bad}</p>\r\n                    <p>Total: {total}</p>\r\n                    <p>Positive feedback: {positivePercentage}%</p>\r\n                </div>\r\n            \r\n            : <Notification message=\"No feedback given\"/>}\r\n        \r\n        \r\n        </div>\r\n    );\r\n}\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.number.isRequired,\r\n}\r\nexport default Statistics;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Section.scss';\r\n\r\nconst Section = ({title, children}) => (\r\n    <div className=\"sectoin\">\r\n        <h1 className=\"title\">{title}</h1>\r\n        {children}\r\n    </div>\r\n)\r\n\r\nSection.defaultProps = {\r\n    title: \"Please leave feedback\",\r\n}\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string,\r\n    children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Section;","import React, { Component } from 'react';\r\nimport FeedbackOptions from './components/FeedbackOptions';\r\nimport Statistics from './components/Statistics';\r\nimport Section from './components/Section';\r\n\r\n\r\nclass App extends Component {\r\n    state = {\r\n        good: 0,\r\n        neutral: 0,\r\n        bad: 0\r\n    };\r\n\r\n    handleFeedbacksQuantity = e => {\r\n        const { name } = e.currentTarget;\r\n\r\n        this.setState(prevState => ({\r\n            [name]: prevState[name] + 1,\r\n        }))\r\n    }\r\n\r\n    countTotalFeedback = () => {\r\n        const { good, neutral, bad } = this.state;\r\n        return good + neutral + bad;\r\n    }\r\n\r\n    countPositiveFeedbackPercentage = () => {\r\n        const { good } = this.state;\r\n\r\n        return Math.round(good / this.countTotalFeedback() * 100);\r\n    }\r\n\r\n    render() {\r\n        const { good, neutral, bad } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <Section title=\"Please leave feedback\">\r\n\r\n                    <FeedbackOptions\r\n                        options={Object.keys(this.state)}\r\n                        onLeaveFeedback={this.handleFeedbacksQuantity}\r\n                    />\r\n\r\n                    <Statistics\r\n                        good={good}\r\n                        neutral={neutral}\r\n                        bad={bad}\r\n                        total={this.countTotalFeedback()}\r\n                        positivePercentage={this.countPositiveFeedbackPercentage()}\r\n                    />\r\n\r\n                </Section>\r\n            </>   \r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}